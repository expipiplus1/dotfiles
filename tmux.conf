# Start windows and panes at 1, not 0
set -g base-index 1
set -g pane-base-index 1

# Something sensible
set -g default-terminal "screen-256color"

new-session

set-option -g default-shell ~/.nix-profile/bin/zsh

# enable mouse
# set -g mode-mouse on
# set -g mouse-resize-pane on
# set -g mouse-select-pane on
# set -g mouse-select-window on
set-option -g -q mouse on

bind-key -n S-Up resize-pane -U 15
bind-key -n S-Down resize-pane -D 15
bind-key -n S-Left resize-pane -L 25
bind-key -n S-Right resize-pane -R 25

bind-key -T root PPage if-shell -F "#{alternate_on}" "send-keys PPage" "copy-mode -e; send-keys PPage"
bind-key -Tcopy-mode-vi PPage send -X page-up
bind-key -Tcopy-mode-vi NPage send -X page-down

bind-key -T root WheelUpPane if-shell -F -t = "#{alternate_on}" "send-keys -M" "select-pane -t =; copy-mode -e; send-keys -M"
bind-key -T root WheelDownPane if-shell -F -t = "#{alternate_on}" "send-keys -M" "select-pane -t =; send-keys -M"
bind-key -Tcopy-mode-vi WheelUpPane send -X halfpage-up
bind-key -Tcopy-mode-vi WheelDownPane send -X halfpage-down

# Focus events for vim
set-option -g focus-events on

# don't delay escape key
set -sg escape-time 0

# C-b is not acceptable -- Vim uses it
set -g prefix C-w
unbind C-b

bind-key w send-prefix

# vi vi vi
set -g mode-keys vi
bind-key -Tcopy-mode-vi 'v' send -X begin-selection
bind-key -Tcopy-mode-vi 'y' send -X copy-pipe-and-cancel 'xsel -i --clipboard'
# move x clipboard into tmux paste buffer
bind C-p run "tmux set-buffer \"$(xsel -o --clipboard)\"; tmux paste-buffer"
# move tmux copy buffer into x clipboard
bind C-y run "tmux show-buffer | xsel -i --clipboard"

set -g history-limit 40000

# no status bar
set -g status off

# Smart pane switching with awareness of vim splits and nested tmux sessions
is_vim='tmux display -p #{pane_current_command} | grep -iqE "(^|\/)\.?g?(view|n?vim?)(diff)?(-wrapped)?$"'
is_tmux='tmux display -p #{pane_pid} | xargs ps h -oargs --ppid | grep -q "tssh"'
is_paned="$is_vim || $is_tmux"
bind -n C-h if-shell "$is_paned" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_paned" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_paned" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_paned" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_paned" "send-keys C-\\" "select-pane -l"
# bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -P 'bg=default' ; select-pane -L ; select-pane -P 'bg=colour8'"
# bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -P 'bg=default' ; select-pane -D ; select-pane -P 'bg=colour8'"
# bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -P 'bg=default' ; select-pane -U ; select-pane -P 'bg=colour8'"
# bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -P 'bg=default' ; select-pane -R ; select-pane -P 'bg=colour8'"
# bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -P 'bg=default' ; select-pane -l ; select-pane -P 'bg=colour8'"

# bind C-d if-shell 'tmux display -p "##T" | tee ~/title | grep -iqP "^\d+:\d+:.*"' "run 'echo tmux > ~/dump'" "run 'echo not-tmux > ~/dump'"

# Smart window splitting with awareness of vim
bind s   if-shell "$is_paned" "send-keys C-w s"   "split-window -v -c '#{pane_current_path}'"
bind C-s if-shell "$is_paned" "send-keys C-w C-s" "split-window -v -c '#{pane_current_path}'"
bind v   if-shell "$is_paned" "send-keys C-w v"   "split-window -h -c '#{pane_current_path}'"
bind C-v if-shell "$is_paned" "send-keys C-w C-v" "split-window -h -c '#{pane_current_path}'"

bind '"' split-window -c '#{pane_current_path}'
bind % split-window -h -c '#{pane_current_path}'
bind c new-window -c '#{pane_current_path}'

# Clear on C-k
bind C-k send-keys -R \; send-keys C-l \; clear-history

# Automatically set window title
set-window-option -g automatic-rename on
set-option -g set-titles on

# Hilight current window
# Works well with base16 colors
set-window-option -g window-active-style 'bg=black'
set-window-option -g window-style 'bg=colour18'
set-window-option -g pane-active-border-style ''

# Renumber windows
set-option -g renumber-windows on

# don't use ansi colors
# set -as terminal-overrides ",*-256color:setaf@:setab@"
set -ga terminal-overrides ',xterm-256color:Tc'

set -g set-clipboard off

# C-c: save into system clipboard (+). With preselection.
bind C-c choose-buffer "run \"tmux save-buffer -b %% - | xsel -i --clipboard\" \; run \" tmux display \\\"Clipboard \(+\) filled with: $(tmux save-buffer -b %1 - | dd ibs=1 obs=1 status=noxfer count=80 2> /dev/null)... \\\" \" "

# resurrection settings
set -g @resurrect-save 'S'
set -g @resurrect-restore 'R'

# for vim
set -g @resurrect-strategy-vim 'session'
# for neovim
set -g @resurrect-strategy-nvim 'session'

set -g @resurrect-capture-pane-contents 'on'

set -g @resurrect-processes '~vi ~vim ~nvim ~man ~less ~more ~tail ~top ~htop ~irssi ~mutt'

# from https://gist.github.com/towo/b5643ba96f987df54acc54470e6be460
set -g update-environment 'DISPLAY SSH_ASKPASS SSH_AUTH_SOCK SSH_AGENT_PID SSH_CONNECTION WINDOWID XAUTHORITY DBUS_SESSION_BUS_ADDRESS'


# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-open'
set -g @plugin 'tmux-plugins/tmux-resurrect'
# set -g @plugin 'seebi/tmux-colors-solarized'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
